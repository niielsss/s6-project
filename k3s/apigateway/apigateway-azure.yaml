apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  labels:
    app: apigateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apigateway
  template:
    metadata:
      labels:
        app: apigateway
        prometheus-scrape: 'true'
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'
    spec:
      containers:
      - name: apigateway
        image: niielsss/individual-s6-apigateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 128Mi
            cpu: "250m"

---

apiVersion: v1
kind: Service
metadata:
  name: apigateway-service
  labels:
    app: apigateway
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: apigateway

# ---

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: apigateway-ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   rules:
#   - host: api.4.182.176.28.nip.io
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: apigateway-service
#             port:
#               number: 8080
