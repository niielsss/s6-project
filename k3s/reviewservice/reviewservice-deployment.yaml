apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-service
  labels:
    app: review-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: review-service
  template:
    metadata:
      labels:
        app: review-service
        prometheus-scrape: 'true'
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'
    spec:
      containers:
      - name: review-service
        #image: k3d-fontys:5000/review-service:v0.1
        image: niielsss/individual-s6-reviewservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 128Mi
            cpu: "500m"
        env:
            - name: POSTGRES_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: reviewservice-postgres-credentials
                  key: connectionString
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS