apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-service
  labels:
    app: review-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: review-service
  template:
    metadata:
      labels:
        app: review-service
        prometheus-scrape: 'true'
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '8080'
    spec:
      containers:
      - name: review-service
        image: niielsss/individual-s6-reviewservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 128Mi
            cpu: "250m"
        env:
            - name: POSTGRES_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: reviewservice-postgres-credentials
                  key: connectionString
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS

---

apiVersion: v1
kind: Secret
metadata:
  name: reviewservice-postgres-credentials
type: Opaque
data:
  connectionString: SG9zdD1yZXZpZXdzZXJ2aWNlZGItc2VydmljZTtQb3J0PTU0MzM7VXNlcm5hbWU9dXNlcm5hbWU7UGFzc3dvcmQ9cGFzc3dvcmQxMjM7RGF0YWJhc2U9cmV2aWV3c2VydmljZWRiOw==

---

apiVersion: v1
kind: Service
metadata:
  name: review-service
  labels:
    app: review-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: review-service